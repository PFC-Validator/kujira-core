syntax = "proto3";
package kujira.oracle;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "kujira/oracle/oracle.proto";

option go_package = "github.com/Team-Kujira/core/x/oracle/types";

// Msg defines the oracle Msg service.
service Msg {
  // AggregateExchangeRatePrevote defines a method for submitting
  // aggregate exchange rate prevote
  rpc AggregateExchangeRatePrevote(MsgAggregateExchangeRatePrevote) returns (MsgAggregateExchangeRatePrevoteResponse);

  // AggregateExchangeRateVote defines a method for submitting
  // aggregate exchange rate vote
  rpc AggregateExchangeRateVote(MsgAggregateExchangeRateVote) returns (MsgAggregateExchangeRateVoteResponse);

  // DelegateFeedConsent defines a method for setting the feeder delegation
  rpc DelegateFeedConsent(MsgDelegateFeedConsent) returns (MsgDelegateFeedConsentResponse);

  // AddPrice adds a new price to the required list of prices
  rpc AddPrice(MsgAddPrice) returns (MsgAddPriceResponse);

  // RemovePrice removes a price from the required list of prices
  rpc RemovePrice(MsgRemovePrice) returns (MsgRemovePriceResponse);

    // UpdateParams sets new module params
    rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  
}

// MsgAggregateExchangeRatePrevote represents a message to submit
// aggregate exchange rate prevote.
message MsgAggregateExchangeRatePrevote {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string hash      = 1 [(gogoproto.moretags) = "yaml:\"hash\""];
  string feeder    = 2 [(gogoproto.moretags) = "yaml:\"feeder\""];
  string validator = 3 [(gogoproto.moretags) = "yaml:\"validator\""];
}

// MsgAggregateExchangeRatePrevoteResponse defines the Msg/AggregateExchangeRatePrevote response type.
message MsgAggregateExchangeRatePrevoteResponse {}

// MsgAggregateExchangeRateVote represents a message to submit
// aggregate exchange rate vote.
message MsgAggregateExchangeRateVote {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string salt           = 1 [(gogoproto.moretags) = "yaml:\"salt\""];
  string exchange_rates = 2 [(gogoproto.moretags) = "yaml:\"exchange_rates\""];
  string feeder         = 3 [(gogoproto.moretags) = "yaml:\"feeder\""];
  string validator      = 4 [(gogoproto.moretags) = "yaml:\"validator\""];
}

// MsgAggregateExchangeRateVoteResponse defines the Msg/AggregateExchangeRateVote response type.
message MsgAggregateExchangeRateVoteResponse {}

// MsgDelegateFeedConsent represents a message to
// delegate oracle voting rights to another address.
message MsgDelegateFeedConsent {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string operator = 1 [(gogoproto.moretags) = "yaml:\"operator\""];
  string delegate = 2 [(gogoproto.moretags) = "yaml:\"delegate\""];
}

// MsgDelegateFeedConsentResponse defines the Msg/DelegateFeedConsent response type.
message MsgDelegateFeedConsentResponse {}


message MsgAddPrice {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(gogoproto.moretags) = "yaml:\"authority\""];
  string symbol = 2 [(gogoproto.moretags) = "yaml:\"symbol\""];
}

// MsgAddPriceResponse defines the Msg/AddPrice response type.
message MsgAddPriceResponse {}

message MsgRemovePrice {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(gogoproto.moretags) = "yaml:\"authority\""];
  string symbol = 2 [(gogoproto.moretags) = "yaml:\"symbol\""];
}

// MsgRemovePriceResponse defines the Msg/RemovePrice response type.
message MsgRemovePriceResponse {}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [(gogoproto.moretags) = "yaml:\"authority\""];
  Params params = 2 [(gogoproto.moretags) = "yaml:\"params\""];
}

// MsgUpdateParamsResponse defines the Msg/UpdateParams response type.
message MsgUpdateParamsResponse {}